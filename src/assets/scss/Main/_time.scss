$time-content-width: 1240px;
$time-content-height: 90vh;

$color-window-dark: var(--color-window-dark);
$color-window-light: var(--color-window-light);
$color-pointy: var(--color-pointy);
$color-cloud-sunrise: rgb(254, 254, 254);
$color-cloud-sunset: #2d5670;
$color-sunrise-zenith: #009af9;
$color-sunrise-horizon: #f7fcff;
$color-sunset-zenith: #01050e;
$color-sunset-horizon: #0b425d;
$color-sun: #fffaad;
$color-moon: white;

$duration: 0.8s;
$half-duration: $duration / 2;
$easing: cubic-bezier(0.25, 0, 0.1, 1);

#sunset:checked ~ * {
  --sunset: 1;
  --sunrise: 0;

  --color-cloud: #9ed5f8;
}

#sunrise:checked ~ * {
  --sunrise: 1;
  --sunset: 0;

  --color-cloud: white;
}

:root {
  --color-window-dark: #3b98d8;
  --color-window-light: white;
}

@mixin transition {
  transition: all $half-duration $half-duration $easing;
}
.time-inner {
  width: 100%;

  position: relative;
  display: flex;
  flex-direction: column;

  .time-content {
    overflow: scroll;
    height: $time-content-height;
    padding: 0 2rem;
    display: flex;
    flex-direction: column;
    z-index: 1;

    font-family: Montserrat, sans-serif;

    * {
      font-weight: 600;
      letter-spacing: 1px;
    }

    > .times {
      flex: 0 0 70%;
    }

    > .heavens {
      flex: 0 0 30%;
    }

    &:before,
    &:after {
      content: "";
      // position: absolute;
      display: block;
      width: 100%;
      // height: 180vh;
      // padding-right: 10rem;
      left: calc(50% - 50vw);
      top: calc(50% - 90vh);

      z-index: -10;
      // @include transition;
    }

    &:before {
      background: linear-gradient(to bottom, #73daf9, #e5f7fe);
      opacity: var(--sunrise);
    }

    &:after {
      background: linear-gradient(to bottom, #0846b0, #23b2ee);
      opacity: var(--sunset);
    }
  }
}

.sky {
  display: flex;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-shadow: 0 0 2rem rgba(black, 0.1);

  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    @include transition;
    z-index: -1;
  }

  &:before {
    background: linear-gradient(
      to bottom,
      $color-sunrise-zenith,
      $color-sunrise-horizon
    );
    opacity: var(--sunrise);
  }
  &:after {
    background: linear-gradient(
      to bottom,
      $color-sunset-zenith,
      $color-sunset-horizon
    );
    opacity: var(--sunset);
  }
}

.times {
  position: absolute;
  right: 0;

  padding-top: 13.5rem;
  padding-right: 2.3rem;
  overflow: hidden;
}

.time {
  display: flex;
  flex-direction: column;

  align-items: center;
  width: 100%;
  padding-right: 10px;
  // justify-items: center;
  color: white;
  @for $i from 1 through 5 {
    &:nth-child(#{$i}) {
      animation-delay: 0.05s * ($i - 1) !important;
    }
  }

  &:first-child {
    &:after {
      font-size: 2.5rem;
    }

    ~ .time {
      opacity: 0.5;
    }
  }

  &:before {
    $caret-width: 0.8rem;
    content: "";
    display: flex;

    left: calc(50% - #{$caret-width});
    margin-bottom: 0.5rem;

    width: 0;
    height: 0;
    border-width: $caret-width;
    border-style: solid;
    border-color: transparent;
    border-bottom-color: white;
  }

  &:after {
    font-size: 2rem;
  }
}

@mixin pointy($deg, $height: 2rem) {
  &:before {
    content: "";
    display: block;
    position: absolute;
    bottom: 100%;
    left: 0;
    height: $height;
    width: 100%;
    z-index: -1;
    @include transition;
    background: $color-pointy;
    transform-origin: if($deg > 0, bottom left, bottom right);
    transform: skewY($deg);
    z-index: -1;
  }
}

.windows {
  $color-window-off: #044da8;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  $space: var(--window-space, 14px);
  $color: var(--window-color, $color-window-light);
  background: repeating-linear-gradient(
    to top,
    $color-window-off 0,
    $color-window-off 6px,
    transparent 6px,
    transparent $space
  );
  overflow: hidden;

  &,
  &:before,
  &:after {
    background-clip: content-box !important;
  }

  &:before,
  &:after {
    @include transition;
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  &:before {
    background: repeating-linear-gradient(
      to top,
      $color 0,
      $color 6px,
      transparent 6px,
      transparent $space
    );
    opacity: var(--sunrise);
  }

  &:after {
    background: repeating-linear-gradient(
      to top,
      gold 0,
      gold 6px,
      transparent 6px,
      transparent $space
    );
    opacity: var(--sunset);
    transition-delay: calc(var(--sunset, 0) * 1.5s);
    transition-duration: $half-duration;
  }
}

.ledge {
  width: 100%;
  height: 0;
  padding: 50% 0;
  overflow: hidden;
  $color-shadow: rgba(black, 0.1);

  &:before {
    @include transition;
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    transform-origin: right top;
    background: linear-gradient(
      to bottom,
      rgba($color-shadow, 0.3),
      transparent
    );
  }

  &:after {
    @include transition;
    content: "";
    display: block;
    position: absolute;
    top: 0;
    height: 4px;
    width: 100%;

    box-shadow: 0 0 8px rgba(black, 0.2);
  }
}

@mixin antennas($xs, $ys, $base: null) {
  &:after {
    content: "";
    display: block;
    position: absolute;
    width: 3px;
    height: 30px;
    bottom: 100%;

    $shadows: ();
    @for $i from 1 through length($xs) {
      $shadow: nth($xs, $i) nth($ys, $i) 0 var(--color-pointy);
      $shadows: append($shadows, $shadow, comma);
    }
    box-shadow: $shadows;
    z-index: -1;
  }

  @if ($base) {
    &:before {
      content: "";
      display: block;
      position: absolute;
      bottom: 100%;
      left: 0;
      height: 4px;
      width: 100%;
      background: $base;
    }
  }
}

.heavens {
  position: absolute;
  width: 200px;
  height: 100%;
  right: 0;
  top: 3.6rem;
  z-index: 10;

  overflow: hidden;
}

[class^="sun"] {
  position: absolute;
  text-align: center;
  width: 100%;
  cursor: pointer;

  &:before {
    content: attr(data-title);
    display: inline-block;
    width: 100%;
    margin: 1rem 0;
    color: white;
    font-size: 1.5rem;
  }

  &:after {
    @include transition;
    margin-top: 1rem;
    content: "";
    display: inline-block;
    width: 100%;
    border-radius: 50%;
  }
}

.glow {
  width: 200px;
  height: 200px;
  z-index: -1;
  position: absolute;
  right: 0;
  filter: blur(50px);

  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
  }

  &:before {
    background: $color-sun;
  }
  &:after {
    background: $color-moon;
  }
}

.sunrise:after {
  width: 78px;
  height: 78px;
  background: $color-sun;
  box-shadow: 0 0 0 1rem rgba($color-sun, 0.3);
}

.sunset {
  &:before {
    margin-bottom: 1.6rem;
  }
  &:after {
    width: 52px;
    height: 52px;

    background: $color-moon;
    box-shadow: 0 0 0 1rem rgba($color-moon, 0.3),
      0 0 0 2rem rgba($color-moon, 0.15);
  }
}

@mixin clouds() {
  transition: box-shadow 3s $easing;
  $shadows-sunrise: ();
  $moved-shadows-sunrise: ();
  $shadows-sunset: ();
  $moved-shadows-sunset: ();
  $delta: 50px;

  $clouds: 10;
  @for $i from 1 through $clouds {
    $x: (random(20px) - 10px) + ($time-content-width / $clouds) * $i;
    $shadow: $x random(50) * 1px + 10px 0 $color-cloud-sunrise;
    $shadows-sunrise: append($shadows-sunrise, $shadow, comma);
    $shadow: set-nth($shadow, 4, $color-cloud-sunset);
    $shadows-sunset: append($shadows-sunset, $shadow, comma);
  }

  @each $shadow in $shadows-sunrise {
    $shadow-y: nth($shadow, 2);
    $new-shadow-y: $shadow-y + random(25) * 1px - 15px;
    $new-shadow: set-nth($shadow, 2, $new-shadow-y);
    $moved-shadows-sunrise: append($moved-shadows-sunrise, $new-shadow, comma);
  }

  @each $shadow in $moved-shadows-sunrise {
    $moved-shadows-sunset: append(
      $moved-shadows-sunset,
      set-nth($shadow, 4, $color-cloud-sunset),
      comma
    );
  }

  &:before,
  &:after {
    animation-duration: 3s;
    animation-timing-function: $easing;
    animation-fill-mode: forwards;
    animation-direction: alternate;
    animation-iteration-count: infinite;
  }
  &:before {
    background: $color-cloud-sunrise;
    box-shadow: $shadows-sunrise;
    animation-name: clouds-sunrise;
  }
  &:after {
    background: $color-cloud-sunset;
    opacity: var(--sunset);
    box-shadow: $shadows-sunset;
    animation-name: clouds-sunset;
  }
  @keyframes clouds-sunrise {
    to {
      box-shadow: $moved-shadows-sunrise;
    }
  }
  @keyframes clouds-sunset {
    to {
      box-shadow: $moved-shadows-sunset;
    }
  }
}

.clouds {
  overflow: hidden;
  @include transition;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 11rem;
  z-index: 1;
  @include clouds();

  &:before,
  &:after {
    @include transition;
    transition-timing-function: ease-in-out;
    width: 10rem;
    height: 10rem;
    top: 5rem;
    left: -3rem;
    border-radius: 50%;
    content: "";
    display: block;
    position: absolute;
  }
}

@mixin stars() {
  $stars: ();

  @for $i from 1 through 30 {
    $star: random($time-content-width) *
      1px
      random(300px) *
      1px
      random(4) *
      1px
      white;
    $stars: append($stars, $star, comma);
  }

  box-shadow: $stars;
}

.stars {
  position: absolute;
  top: 0;
  left: 0;
  margin-top: 11rem;
  height: 100%;
  width: 100%;
  overflow: hidden;

  &:before,
  &:after {
    @include transition;
    opacity: var(--sunset);
    content: "";
    display: block;
    position: absolute;
    border-radius: 50%;
  }

  &:before {
    height: 3px;
    width: 3px;
    @include stars();
  }

  &:after {
    height: 5px;
    width: 5px;
    @include stars();
    transition-delay: calc(var(--sunset) * 1.5s);
  }
}

input {
  position: absolute;
  visibility: hidden;
  pointer-events: none;
}

@each $time in rise, set {
  $other-time: if($time == rise, set, rise);

  #sun#{$time}:checked ~ .time-content {
    .time {
      animation: time-move-sun#{$time} $duration none;

      &:after {
        content: "";
        animation: time-change-sun#{$time} $duration + 1s both;
      }
    }
    .heavens > .sun#{$other-time} {
      &:before {
        animation: fade-out $half-duration $easing both;
      }
      &:after {
        animation: circle-leave $duration $easing both;
      }
    }

    .heavens > .sun#{$time} {
      pointer-events: none;
      &:before {
        animation: fade-in $half-duration 1.5s $easing both;
      }
      &:after {
        animation: circle-enter $half-duration $half-duration $easing both;
      }
    }

    $glow: if($time == rise, before, after);
    $other-glow: if($time == rise, after, before);

    .glow:#{$glow} {
      animation: circle-enter $half-duration $half-duration $easing both;
    }
    .glow:#{$other-glow} {
      animation: circle-leave $duration $easing both;
    }

    .ledge {
      &:before {
        animation: ledge-shadow-sun#{$time} $duration $easing both;
      }
    }
  }

  @keyframes ledge-shadow-sun#{$time} {
    50% {
      transform: skewX(-25deg);
    }
    60% {
      transform: skewX(-80deg);
    }
    from,
    to {
      animation-timing-function: ease;
      transform: skewX(-45deg);
    }
  }

  @keyframes time-move-sun#{$time} {
    50% {
      transform: translateY(-25%);
      opacity: 0;
    }
  }
}

@keyframes circle-leave {
  50% {
    transform: translateY(-50%);
    opacity: 1;
  }
  to {
    animation-timing-function: ease-out;
    transform: translateY(60vh);
    opacity: 0;
  }
}

@keyframes circle-enter {
  from {
    opacity: 0;
    transform: translateY(-50vh);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes time-change-sunrise {
  from {
    content: attr(data-sunset);
  }
  to {
    content: attr(data-sunrise);
  }
}

@keyframes time-change-sunset {
  from {
    content: attr(data-sunrise);
  }
  to {
    content: attr(data-sunset);
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
